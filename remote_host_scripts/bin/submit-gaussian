#!/bin/bash -x

#if [ "$#" != "5" ]; then
#	echo	"Syntax: $0 [directory] [oauth key] [oauth secret] [token key] [token secret] [project name]"
#	exit
#fi

cd $1
CONSUMERKEY=$2
CONSUMERSECRET=$3
TOKENKEY=$4
TOKENSECRET=$5
PROJECT_NAME=$6

testf() {
	for T in $*; do
		if [ ! -e $T ]; then
			echo "File $T does not exist"
			exit 1
		fi
	done
}

if [ -e .published ]; then
	echo "Already published. Remove '.published' to try again"
	exit 0
fi

touch .published

ln -s input-0 input.gjf
ln -s output-1.fchk.gz checkpoint.fchk.gz
ln -s output-0 logfile.log
ln -s output-3 inchi.txt
ln -s output-4 smiles.txt
cat *xml > cml.xml

testf input.gjf checkpoint.fchk.gz logfile.log inchi.txt cml.xml

#AUTHOR="Henry Rzepa"

STOICH=`grep Stoi logfile.log  | head -1 | sed "s/Stoichiometry//g" | sed "s/\s*//g" | sort | uniq `

if [ "$STOICH" == "" ] ;then
	echo "Stoichiometry not found"
	exit 2
fi

INCHI=`head -1 inchi.txt`
INCHIKEY=`tail -1 inchi.txt`
SMILES=`head -1 smiles.txt`

WFN=
if [ -e a.wfn ]; then
	ln -s a.wfn wavefunction.wfn
	WFN="-f wavefunction.wfn"
fi

R=""
for ROUTE in `grep -e "^ #" logfile.log  | sed "s/^ # //" | sort | uniq `; do
	R="$R -g $ROUTE"
done

lookup_inchikey.sh $INCHIKEY > urls
echo "http://www.imperial.ac.uk/ict/services/teachingandresearchservices/highperformancecomputing" >> urls
# echo "http://www.ch.ic.ac.uk/rzepa/rzepa.xrdf" >> urls

module load openbabel/2.3.0 intel-suite
babel -i g09 logfile.log -o pdb structure.pdb

URLS=`tac urls | awk '{print "-u "$0}' `

if [ "$PROJECT_NAME" != "" ]; then
	PROJECT="-p $PROJECT_NAME";
fi

create.py \
		-f input.gjf \
		-f checkpoint.fchk.gz \
		-f cml.xml \
		-f logfile.log \
		-f structure.pdb \
		-g "$INCHI" \
		-g "$INCHIKEY" \
		-g "$SMILES" \
		-g "$STOICH" \
		$R \
		$WFN \
		-t "Gaussian Job Archive for $STOICH" \
		-d "Archive of work produced using the resources of the Imperial College High Performance Computing Service." \
		-c 37 \
		--consumerkey $CONSUMERKEY \
		--consumersecret $CONSUMERSECRET \
		--tokenkey $TOKENKEY \
		--tokensecret $TOKENSECRET \
		$URLS  $PROJECT >> .log 2>&1

cat .log
