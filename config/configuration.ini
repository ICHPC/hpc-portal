;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; User configurable options follow
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; is a comment delimiter.
;
; The [sections] are decorative for now.


[errors]
;;; Errors.  Note that if scripts fail to parse no errors
;;; will show unless appropriate options are set in the system-wide
;;; php.ini file.
;;; If no output or errors are shown test all PHP scripts with
;;; php -l script.php / script.ini

;; Error reporting.
; E_ALL: Show all errors.  Use for debugging only.
; E_ERROR: Show fatal errors.
; E_STRICT: Show 'advice' from PHP re: compatibility

; To be honest, just leave it at E_ALL and make sure
; the errors don't go anywhere unsafe during production.
; That'll save you wondering why a failed 'require' statement
; produces no output under E_ERROR or E_STRICT
error_reporting = E_ALL

;; Where errors go.  Uncomment suitably.
; Display all errors in browsers.  Unwise in production.
display_errors = 0
;; Send errors to httpd error log
log_errors = 1
;; Send errors to a file
;error_log = "/opt/portal-devel/deploy/error.log"

[smarty]
;;; Smarty template engine.  Either version 2 or 3 should work.
;;
;; Leave this option commented if you have a package installed Smarty, it
;; should work if the Smarty directory is in the PHP include_path.
;; Otherwise set this option to the path to your locally installed Smarty.
;; e.g.
;; smarty_location = "/usr/local/share/php/Smarty/Smarty.class.php"

[admin]
;;; Local admin options
admin_email = "adminname@example.com"
admin_name = "Admin Name"
admin_subject = "Portal Mail"

[auth]
;;; Authentication of users.
;; LDAP host.  If using LDAP, where requests are sent.
ldap_host = "unixldap.cc.ic.ac.uk"
;; LDAP port number.
ldap_port = 389
;; LDAP basedns.  As many DNs as you wish to check for the user in.
ldap_basedn[] = "ou=chemistry,dc=ic,dc=ac,dc=uk"
ldap_basedn[] = "ou=hpc,dc=ic,dc=ac,dc=uk"

;; File authentication.  Location of file.
; Lines in the file have the format:
; user:Full Name:$salt$passwordhashinsomestandardformat
;file_location = "/opt/portal-devel/deploy/password.txt"

;; Which authentication methods to use.  Can use: ldap and/or file.
;  comma separated list, e.g. "ldap,file"
auth_methods = "ldap"
;; Auth type: strict or permissive
;  strict means all methods in "auth_methods" must succeed.
;  permissive means at least one method must succeed.
auth_type = "strict"

[database]
;; Connection parameters for the Postgresql database
;  From the webserver you should be able to do:
;  psql -h db_host -p db_port -U db_user -W db_dbname
;  entering db_password when requested.
db_host =  "127.0.0.1"
db_password = "devel"
db_dbname =  "devel"
db_port =  "5432"
db_user = "devel"

[ssh]
;;; SSH commands
;;  For the webserver to connect to the run hosts.
;;  These are the paths to the commands on the webserver
ssh =  "/usr/bin/ssh"
;; The flag to give to ssh / scp to pass it a private key
ssh_key_flag = "-i"
;; A comma separated list of extra flags you may wish to pass to ssh / scp
ssh_flags = "-oConnectTimeout=10"
scp = "/usr/bin/scp"
ssh-keygen = "/usr/bin/ssh-keygen"

[system_commands]
;;; Other local system commands
remote_cat = "/bin/cat"
remote_rm = "/bin/rm"

[local_uportal_commands]
;;; Local UPortal commands
dspace_importer= "/opt/portal-devel/deploy/uportal/uportal-config/bin/lniimport"
chempound_importer= "/opt/portal-devel/deploy/uportal/uportal-config/bin/qc"

[remote_uportal_commands]
;;  Remote UPortal commands
publish-figshare = "publish_figshare"
make_staging_directory = "make_staging_directory"
make_input_tar = "make_tar"
delete_job =  "delete_job"
run_job =  "run_app"
job_status =  "job_state"
filetest =  "filetest"
app_config =  "app_configuration"
pool_status =  "pool_status"

[publishing]
;;  DSpace
; e.g. dspace_url     = "http://scanweb.cc.ic.ac.uk:8080/dspace/handle/"
dspace_url     = "http://scanweb.cc.ic.ac.uk:8080/dspace/handle/"

;; ORCID.  Your institution"s ORCID credentials.
orcid_client_id     = "0000-0000-0000-0000"
orcid_client_secret = "00000000-0000-0000-0000-000000000000"

;; Figshare.  Your institution"s Figshare credentials.
; this is your consumer key
figshare_key = "0000000000000000000000"
; this is your secret
figshare_secret = "0000000000000000000000"


[directories]
;; ssh_keydir.  The webserver must be able to read and write from this directory.
;  UPortal will permanently store the users" ssh keys here.
;  Non-webserver users should NOT be able to write files here.
;  The best solution is to set the directory owned by the webserver and have
;  the permissions 700
ssh_keydir = "/opt/portal-devel/deploy/keys"
;; smarty_compile_dir.  Where the template engine stores compiled templates
;  must be writable by the webserver only.
smarty_compile_dir = "/opt/portal-devel/deploy/templates_c"

;; Temporary directory location on webserver
tempdir = "/tmp/"

[http_protocol]
;; HTTP protocol to use
protocol = "https"
