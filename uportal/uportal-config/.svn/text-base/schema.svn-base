DROP SEQUENCE app_seq_id; 
DROP SEQUENCE job_seq_id;
DROP SEQUENCE user_id_seq_id;


CREATE SEQUENCE app_seq_id;
CREATE SEQUENCE job_seq_id;
CREATE SEQUENCE user_id_seq_id;
CREATE SEQUENCE project_seq_id;
CREATE SEQUENCE pool_id_seq;

DROP TABLE users CASCADE;
DROP TABLE app_list CASCADE;
DROP TABLE app_input CASCADE;
DROP TABLE app_output CASCADE;
DROP TABLE job_list CASCADE;
DROP TABLE input_file CASCADE;
DROP TABLE output_file CASCADE;
DROP TABLE acl CASCADE;
DROP TABLE projects CASCADE;
DROP TABLE pools CASCADE;

CREATE  TABLE  users (
   userid  INTEGER UNIQUE  NOT NULL DEFAULT nextval('user_id_seq_id'),
	is_admin BOOLEAN DEFAULT FALSE NOT NULL,
	username VARCHAR(1024),
	PRIMARY KEY (userid)
);


CREATE TABLE pools (
	owner integer not null,
	pool_id integer not null unique default nextval('pool_id_seq'),
	remote_user	 VARCHAR(16) not null,
	remote_host VARCHAR(100) not null,
	script_path VARCHAR(1024) not null default '/',
	description VARCHAR(100) not null,
	public BOOLEAN DEFAULT FALSE NOT NULL,
	primary key (pool_id),
	foreign key (owner) references users(userid) on update cascade on delete cascade 
);


CREATE TABLE projects (
	project_id INTEGER UNIQUE NOT NULL DEFAULT nextval('project_seq_id' ),
	userid INTEGER NOT NULL,
	description VARCHAR(40) NOT NULL UNIQUE,
	PRIMARY KEY (project_id ),
	FOREIGN KEY (userid) REFERENCES users(userid) ON UPDATE CASCADE ON DELETE CASCADE 
);

CREATE TABLE app_list (
	app_id	 INTEGER UNIQUE  NOT NULL DEFAULT nextval('app_seq_id'),
	app_name	 VARCHAR(1024) ,
	app_script       VARCHAR(1024) NOT NULL,
	ncpus INTEGER DEFUALT 1,
	memory INTEGER DEFAULT 64,
	pool_id INTEGER NOT NULL,
	publishable	BOOLEAN NOT NULL DEFAULT FALSE,
	current BOOLEAN DEFAULT FALSE,
	dspace_collection INTEGER DEFAULT NULL,
	wall_time INTEGER DEFAULT 48,
	PRIMARY KEY (app_id),
	foreign key (pool_id) references pools(pool_id) on update cascade on delete cascade
);

CREATE TABLE app_input (
	app_id	 INTEGER NOT NULL,
	index INTEGER NOT NULL,
	description VARCHAR(100),
	mimetype VARCHAR(100) NOT NULL DEFAULT 'text/plain',
	dspace_subject BOOLEAN DEFAULT FALSE NOT NULL,
	dspace_store BOOLEAN DEFAULT FALSE NOT NULL,
	required BOOLEAN DEFAULT TRUE NOT NULL,
	PRIMARY KEY (app_id, index ),
	FOREIGN KEY (app_id) REFERENCES app_list(app_id)  ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE app_output (
	app_id	 INTEGER NOT NULL,
	index INTEGER NOT NULL,
	description VARCHAR(100),
	dspace_subject BOOLEAN DEFAULT FALSE NOT NULL,
	dspace_store BOOLEAN DEFAULT FALSE NOT NULL,
	mimetype VARCHAR(100) NOT NULL DEFAULT 'text/plain',
	filename VARCHAR(1024) NOT NULL DEFAULT 'output.txt',
	available_at_runtime boolean NOT NULL DEFAULT false,  
	PRIMARY KEY (app_id, index ),
	FOREIGN KEY (app_id) REFERENCES app_list(app_id)  ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE job_list (
	job_id INTEGER UNIQUE NOT NULL DEFAULT nextval('job_seq_id'),
	app_id INTEGER NOT NULL,
	userid    INTEGER NOT NULL,
	description VARCHAR(2048) NOT NULL, 
	staging_dir VARCHAR(1024) NOT NULL,
	deleted BOOLEAN NOT NULL DEFAULT FALSE,
	status  VARCHAR(2)  DEFAULT 'U',
	substatus VARCHAR(1024),
	submit_time	 TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	wall_time INTEGER DEFAULT NULL,
	is_published BOOLEAN DEFAULT FALSE,
	dspace_mapfile VARCHAR(65535) DEFAULT NULL,
	handle VARCHAR(256) DEFUALT NULL,
	project_id INTEGER,
	PRIMARY KEY( job_id ),
	FOREIGN KEY  (app_id)     REFERENCES  app_list( app_id    ) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY  (userid)     REFERENCES  users   ( userid   ) ON UPDATE CASCADE ON DELETE NO ACTION,
	FOREIGN KEY  (project_id) REFERENCES  projects   ( project_id   ) ON UPDATE CASCADE ON DELETE NO ACTION
);


CREATE TABLE output_file (
	job_id INTEGER NOT NULL UNIQUE,
	filename VARCHAR(1024),
	PRIMARY KEY ( job_id ),
	FOREIGN KEY (job_id) REFERENCES job_list( job_id ) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE input_file (
	job_id INTEGER NOT NULL,
	filename VARCHAR(1024),
	mimetype VARCHAR(1024) NOT NULL DEFAULT 'text/plain',
	index INTEGER NOT NULL,
	PRIMARY KEY ( job_id, index ),
	FOREIGN KEY (job_id) REFERENCES job_list( job_id ) ON UPDATE CASCADE ON DELETE CASCADE

);


CREATE TABLE acl (
	pool_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	PRIMARY KEY ( pool_id, user_id ),
       FOREIGN KEY (pool_id) REFERENCES pools( pool_id ) ON UPDATE CASCADE ON DELETE CASCADE,
       FOREIGN KEY (user_id) REFERENCES users( userid ) ON UPDATE CASCADE ON DELETE CASCADE
);



